(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{498:function(e,t,a){"use strict";a.r(t);var s=a(45),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"同源政策与跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源政策与跨域"}},[e._v("#")]),e._v(" 同源政策与跨域")]),e._v(" "),a("p",[e._v("浏览器安全的基石是“同源策略”（same-origin policy）。在理解跨域问题之前，先看看同源策略。")]),e._v(" "),a("h2",{attrs:{id:"同源策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源策略"}},[e._v("#")]),e._v(" 同源策略")]),e._v(" "),a("p",[e._v("同源策略是由 Netscape 公司在 1995 年引入浏览器的。目前，所有浏览器都实行这个政策。")]),e._v(" "),a("p",[e._v("最初，它的含义是指：A网页设置的 Cookie，B网页不能打开，除非这两个网页同源。所谓同源指的是“三个相同”。")]),e._v(" "),a("ul",[a("li",[e._v("协议相同")]),e._v(" "),a("li",[e._v("域名相同")]),e._v(" "),a("li",[e._v("端口相同")])]),e._v(" "),a("p",[e._v("举例来说，"),a("code",[e._v("http://www.example.com/dir/page.html")]),e._v(" 这个网址，它的协议是 "),a("code",[e._v("http://")]),e._v(", 域名是 "),a("code",[e._v("www.example.com")]),e._v("，端口是 "),a("code",[e._v("80")]),e._v("。它的同源情况如下：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("http://www.example.com/dir2/other.html")]),e._v(" 同源")]),e._v(" "),a("li",[a("code",[e._v("http://example.com/dir/other.html")]),e._v(" 不同源，域名不同")]),e._v(" "),a("li",[a("code",[e._v("http://v2.www.example.com/dir/other.html")]),e._v(" 不同源，域名不同")]),e._v(" "),a("li",[a("code",[e._v("http://www.example.com:81/dir/other.html")]),e._v(" 不同源，端口不同")])]),e._v(" "),a("p",[e._v("同源政策的目的是为了保证用户的信息安全，防止恶意网站窃取数据。")]),e._v(" "),a("p",[e._v("设想一种情况，A网站是一家银行，用户登录之后，又去浏览其他网站。如果其他网站可以阅读A网站的 Cookie，会发生很严重的事故。")]),e._v(" "),a("p",[e._v("因此，“同源政策”是必须的，否则 Cookie 可以共享，互联网就毫无安全可言了。")]),e._v(" "),a("h3",{attrs:{id:"限制范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限制范围"}},[e._v("#")]),e._v(" 限制范围")]),e._v(" "),a("p",[e._v("随着互联网的快速发展，同源政策越来越严格。目前，如果非同源，共有三种行为受到限制：")]),e._v(" "),a("ul",[a("li",[e._v("Cookie，LocalStorage 和 IndexDB 无法读取。")]),e._v(" "),a("li",[e._v("DOM 无法获得。")]),e._v(" "),a("li",[e._v("AJAX 请求不能发送。")])]),e._v(" "),a("p",[e._v("这些限制是必要的。但是有些情况下，这些限制会导致不方便，合理的用途也会受到影响。下面我们看看如何规避这些限制。")]),e._v(" "),a("h3",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[e._v("#")]),e._v(" Cookie")]),e._v(" "),a("p",[e._v("首先看看 Cookie。Cookie 是服务器写入浏览器的一小段信息，只有同源网页才能共享。但是，当两个网页的一级域名相同，只是二级域名不同时，浏览器允许通过设置"),a("code",[e._v("document.domain")]),e._v("来共享 Cookie。")]),e._v(" "),a("p",[e._v("另外，服务器也可以在设置 Cookie 的时候，指定 Cookie 的所属域名为一级域名，例如 "),a("code",[e._v(".example.com")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Set-Cookie: key=value; domain=.example.com; path=/\n")])])]),a("p",[e._v("这样的话，二级域名和三级域名不用做任何设置，都可以读取这个 Cookie。")]),e._v(" "),a("blockquote",[a("p",[e._v("注意，在 Set-Cookie 时，"),a("code",[e._v("domain")]),e._v(" 属性是可选的。如果没有指定它，那么默认是当前 URL 的域名，并且子域名是不包括的；如果指定了它，那么所有子域名都是包括在内的。")])]),e._v(" "),a("p",[e._v("另外，以上方法仅适用于 Cookie 的共享，不适用于 LocalStorage 和 IndexDB。其他方法可参阅 "),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[e._v("#")]),e._v(" CORS")]),e._v(" "),a("p",[e._v("同源政策规定，AJAX 只能发送给同源的网址，否则报错。如果我们需要给不同源的网址发送 AJAX 请求，可以使用 跨站资源分享（Cross-Origin Resource Sharing，CORS）。它是 W3C 标准，是解决跨源AJAX请求的根本解决方案。")]),e._v(" "),a("p",[e._v("CORS 需要服务器和浏览器同时支持。对于浏览器端，整个 CORS 通信过程都由浏览器自动完成，不需要用户参与。对于开发者来说，CORS 通信与同源的 AJAX 通信没有差别，代码完全相同。浏览器一旦发现 AJAX 请求是跨源的，就会自动添加一些附加的头部信息，有时还会多出一次附加的请求，但用户不会有感觉。")]),e._v(" "),a("p",[e._v("因此，实现 CORS 的关键是服务器。只要服务器实现了 CORS 接口，并且浏览器支持，就可以跨源通信。")]),e._v(" "),a("h4",{attrs:{id:"两种请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种请求"}},[e._v("#")]),e._v(" 两种请求")]),e._v(" "),a("p",[e._v("浏览器将 CORS 请求分为两类：简单请求（Simple Request）和非简单请求（not-so-simple request).")]),e._v(" "),a("p",[e._v("如果同时满足以下两大条件，就属于简单请求。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(1) 请求方法是以下三种之一：\n* HEAD\n* GET\n* POST\n(2) HTTP 头信息不超出以下几种字段：\n* Accept\n* Accept-Language\n* Content-Language\n* Last-Event-ID\n* Content-Type: 仅限于三个值 application/x-www-form-urlencoded, multipart/form-data, text/plain\n")])])]),a("p",[e._v("凡是不同时满足以上两个条件，就属于非简单请求。浏览器对简单请求和非简单请求的处理是不一样的。")]),e._v(" "),a("h5",{attrs:{id:"简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单请求"}},[e._v("#")]),e._v(" 简单请求")]),e._v(" "),a("p",[e._v("对于简单请求，浏览器的策略是直接发送 CORS 请求。具体来说，浏览器会在请求的头部信息中添加一个 Origin 字段。")]),e._v(" "),a("p",[e._v("下面一个例子，就是一个简单请求，浏览器发现这个 AJAC 是一个简单请求，就自动在头部信息中添加 Origin 字段。")]),e._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("GET")]),e._v(" /cors HTTP/1.1")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Origin:")]),e._v(" http://api.bob.com\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Host:")]),e._v(" api.alice.com\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Accept-Language:")]),e._v(" en-US\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Connection:")]),e._v(" keep-alive\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("User-Agent:")]),e._v(" Mozilla/5.0...\n")])])]),a("p",[e._v("上面的头信息中，Origin 字段用来说明，本次请求来自哪个源（协议+域名+端口）。服务器会根据这个值，来决定是否同意这次请求。")]),e._v(" "),a("p",[e._v("如果 Origin 指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。浏览器发现，这个回应的头部信息中没有包含 "),a("code",[e._v("Access-Control-Allow-Origin")]),e._v("字段，就知道服务器不支持 CORS 或者 该请求的Origin不在服务器的允许范围内，因此浏览器抛出一个错误，被 "),a("code",[e._v("XMLHttpRequest")]),e._v("的"),a("code",[e._v("onerror")]),e._v("回调函数捕获。")]),e._v(" "),a("p",[e._v("如果 Origin 指定的源，在许可范围内，服务器返回的响应，会多出几个头信息字段：")]),e._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Access-Control-Allow-Origin:")]),e._v(" http://api.bob.com\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Access-Control-Allow-Credentials:")]),e._v(" true\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Access-Control-Expose-Headers:")]),e._v(" FooBar\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Content-Type:")]),e._v(" text/html; charset=utf-8\n")])])]),a("p",[e._v("上面的头部信息中，有三个与 CORS 有关，都以 "),a("code",[e._v("Access-Control-")]),e._v("开头。")]),e._v(" "),a("p",[a("code",[e._v("Access-Control-Allow-Origin")]),e._v("字段是必须的，它的值要么是请求时 Origin 的值，要么是一个"),a("code",[e._v("*")]),e._v("，表示接受任何域名的请求。")]),e._v(" "),a("p",[a("code",[e._v("Access-Control-Allow-Credentials")]),e._v("是可选的。它的值是布尔值，表示是否允许发送 Cookie。默认情况下，Cookie 不包含在 CORS 请求中。设为 "),a("code",[e._v("true")]),e._v(" 后，即表示服务器明确许可，Cookie 可以包含在请求中，一起发送给服务器。这个值只能被设为 true，如果服务器不要浏览器发送 Cookie，删除该字段即可。")]),e._v(" "),a("p",[a("code",[e._v("Access-Control-Expose-Headers")]),e._v("是可选的。对于一般的 CORS 请求，"),a("code",[e._v("XMLHttpRequest")]),e._v("的"),a("code",[e._v("getResponseHeader()")]),e._v("方法只能拿到6个基本字段："),a("code",[e._v("Cache-Control")]),e._v(", "),a("code",[e._v("Content-Language")]),e._v(", "),a("code",[e._v("Content-Type")]),e._v(", "),a("code",[e._v("Expires")]),e._v(", "),a("code",[e._v("Last-Modified")]),e._v(", "),a("code",[e._v("Pragma")]),e._v("。如果想拿到其他字段，就必须在"),a("code",[e._v("Access-Control-Expose-Headers")]),e._v("字段中指定。例如上面的例子中，"),a("code",[e._v("getResponseHeader('FooBar')")]),e._v("就可以返回"),a("code",[e._v("FooBar")]),e._v("字段的值。")]),e._v(" "),a("p",[e._v("另外，上面提到 CORS 请求默认不发送 Cookie 和 HTTP 认证信息。如果要把 Cookie 发送给服务器，一方面要服务器同意，指定 "),a("code",[e._v("Access-Control-Allow-Credentials")]),e._v("为"),a("code",[e._v("true")]),e._v("，另一发面，开发者也必须在 AJAX 请求中打开 withCredentials 属性：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("withCredentials "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("否则，即使服务器同意发送 Cookie，浏览器也不会发送。或者，服务器要求设置 Cookie，浏览器也不会处理。")]),e._v(" "),a("p",[e._v("需要注意的是，如果要发送 Cookie，"),a("code",[e._v("Access-Control-Allow-Origin")]),e._v("的值就不能设为 "),a("code",[e._v("*")]),e._v("，而必须指定明确的，与请求网页一致的域名。同时，Cookie 依然遵循同源策略，只有用服务器域名设置的 Cookie 才会上传，其他域名的 Cookie 不会上传，且（跨域）原网页代码中的"),a("code",[e._v("document.cookie")]),e._v("也无法读取服务器域名下的Cookie。")]),e._v(" "),a("h5",{attrs:{id:"非简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非简单请求"}},[e._v("#")]),e._v(" 非简单请求")]),e._v(" "),a("p",[e._v("非简单请求是那种对服务器有特殊要求的请求，比如请求方法是 "),a("code",[e._v("PUT")]),e._v(" 或 "),a("code",[e._v("DELETE")]),e._v("，或者 "),a("code",[e._v("Content-Type")]),e._v("字段的类型是 "),a("code",[e._v("application-json")]),e._v("。")]),e._v(" "),a("p",[e._v("对于非简单请求，浏览器会在正式通信之前，增加一次 HTTP 查询请求，被称为 预检请求（preflight）。")]),e._v(" "),a("p",[e._v("浏览器首先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些 HTTP 动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的 "),a("code",[e._v("XMLHttpRequest")]),e._v(" 请求，否则就报错。")]),e._v(" "),a("p",[e._v("下面是一段浏览器的 Javascript 脚本：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'http://api.alice.com/cors'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'PUT'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("setRequestHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'X-Custom-Header'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("上面代码中，HTTP请求的方法是 PUT，而且发送了一个自定义头部信息 "),a("code",[e._v("X-Custom-Header")]),e._v("。")]),e._v(" "),a("p",[e._v("浏览器发现，这是一个非简单请求，于是发出一个预检请求，要求服务器确认可以这样请求。下面是这个预检请求的HTTP头信息.")]),e._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token property"}},[e._v("OPTIONS")]),e._v(" /cors HTTP/1.1")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Origin:")]),e._v(" http://api.bob.com\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Access-Control-Request-Method:")]),e._v(" PUT\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Access-Control-Request-Headers:")]),e._v(" X-Custom-Header\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Host:")]),e._v(" api.alice.com\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Accept-Language:")]),e._v(" en-US\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Connetion:")]),e._v(" keep-alive\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("User-Agent:")]),e._v(" ...\n")])])]),a("p",[e._v("预检请求用的请求方法是 OPTIONS，表示这个请求是用来询问的。头信息里，关键字段是 Origin，表示请求来自哪个源。")]),e._v(" "),a("p",[e._v("除了 Origin，请求中还有两个特殊字段：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Access-Control-Request-Method")]),e._v("字段是必须的，用来列出浏览器的 CORS 请求会用到哪些方法。")]),e._v(" "),a("li",[a("code",[e._v("Access-Control-Request-Headers")]),e._v("字段是可选的，是一个逗号分割的字符串，指定浏览器 CORS 请求还会额外发送的头部字段。")])]),e._v(" "),a("p",[e._v("服务器收到预检请求后，检查了 "),a("code",[e._v("Origin")]),e._v(", "),a("code",[e._v("Access-Control-Request-Method")]),e._v(", "),a("code",[e._v("Access-Control-Request-Headers")]),e._v("三个字段后，如果确认允许跨域请求，就可以作出回应。")]),e._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token response-status"}},[e._v("HTTP/1.1 "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("200 OK")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Date:")]),e._v(" Mon, 01 Dec 2008 01:15:39 GMT\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Server:")]),e._v(" Apache/2.0.61 (Unix)\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Access-Control-Allow-Origin:")]),e._v(" http://api.bob.com\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Access-Control-Allow-Methods:")]),e._v(" GET, POST, PUT\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Access-Control-Allow-Headers:")]),e._v(" X-Custom-Header\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Content-Type:")]),e._v(" text/html; charset=utf-8\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Content-Encoding:")]),e._v(" gzip\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Content-Length:")]),e._v(" 0\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Keep-Alive:")]),e._v(" timeout=2, max=100\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Connection:")]),e._v(" Keep-Alive\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("Content-Type:")]),e._v(" text/plain\n")])])]),a("p",[e._v("上面的 HTTP 回应中，关键的是 "),a("code",[e._v("Access-Control-Allow-Origin")]),e._v("字段，表示 "),a("code",[e._v("http://api.bob.com")]),e._v(" 可以请求该数据。其他字段意义同理。")]),e._v(" "),a("p",[e._v("一旦服务器通过了预检请求，以后浏览器每次发送正常的 CORS 请求，就都跟简单请求一样，会有一个 "),a("code",[e._v("Origin")]),e._v(" 头信息字段。服务器的回应，也都会有一个 "),a("code",[e._v("Access-Control-Allow-Origin")]),e._v(" 头信息字段。")]),e._v(" "),a("p",[e._v("总结，CORS 与 JSONP 的目的相同，但是比 JSONP 更强大。")]),e._v(" "),a("p",[e._v("JSONP 只支持 GET 请求，CORS 支持所有类型的 HTTP 请求。JSONP 的优势在于支持老式游览器，以及可以向不支持 CORS 的网站请求数据。")]),e._v(" "),a("p",[e._v("Spring 中已经实现了 CORS 相关功能，配置即可。")]),e._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("跨域资源共享 CORS 详解 - 阮一峰"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);